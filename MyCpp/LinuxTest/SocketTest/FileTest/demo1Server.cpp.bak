#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <fcntl.h>

int main()
{
	int sfd, cfd, ffd;
	int r;
	int len;

	char buf[128];
	char filename[100];
	struct sockaddr_in dr;
	sfd = socket(AF_INET, SOCK_STREAM, 0);
	if(sfd == -1)
		printf("%m\n"),exit(-1);
	printf("socket success.\n");

	dr.sin_family = AF_INET;
	dr.sin_port = htons(54321);
	inet_aton("127.0.0.1", &dr.sin_addr);
	r = bind(sfd, (struct sockaddr*)&dr, sizeof(dr));
	if(r==-1)
		printf("%m\n"),close(sfd),exit(-1);
	printf("bind success.\n");

	r = listen(sfd, 10);//并发数
	if(r == -1)
		printf("%m\n"),close(sfd),exit(-1);
	printf("listen success.\n");

	cfd = accept(sfd, 0, 0);
	if(r == -1)
		printf("%m\n"),close(sfd),exit(-1);
	printf("accept success.\n");

	r = recv(cfd, &len, sizeof(len), MSG_WAITALL);
	r = recv(cfd, filename, len, MSG_WAITALL);
	filename[len] = '\0';
	printf("filename: %s\n", filename);

	ffd = open(filename, O_RDWR | O_CREAT, 0666);

	while(1)
	{
		r = recv(cfd, &len, sizeof(len), MSG_WAITALL);
		if(len == 0 ) break;
		r = recv(cfd, buf, len, MSG_WAITALL);

		write(ffd, buf, len);

	}

	close(ffd);
	close(cfd);
	close(sfd);
	printf("recv file success.\n");

	return 0;
}